box: openjdk:13-jdk-alpine

build:
  box: maven:3.6.1-jdk-13-alpine
  steps:
    - script:
       name: "Populate local maven repo"
       code: |
         mvn install:install-file -Dfile=src/main/libs/ojdbc10.jar -DgroupId=com.oracle.jdbc -DartifactId=ojdbc10 -Dversion=19.3.0 -Dpackaging=jar
         mvn install:install-file -Dfile=src/main/libs/ucp.jar -DgroupId=com.oracle.jdbc -DartifactId=ucp -Dversion=19.3.0 -Dpackaging=jar
         mvn install:install-file -Dfile=src/main/libs/osdt_core.jar -DgroupId=com.oracle.jdbc -DartifactId=osdt_core -Dversion=19.3.0 -Dpackaging=jar
         mvn install:install-file -Dfile=src/main/libs/osdt_cert.jar -DgroupId=com.oracle.jdbc -DartifactId=osdt_cert -Dversion=19.3.0 -Dpackaging=jar
         mvn install:install-file -Dfile=src/main/libs/oraclepki.jar -DgroupId=com.oracle.jdbc -DartifactId=oraclepki -Dversion=19.3.0 -Dpackaging=jar
    - wercker/maven:
      goals: clean package

push-release:
  steps:
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        repository: $DOCKER_REPO
        registry: $DOCKER_REGISTRY
        tag: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT
        working-dir: $WERCKER_ROOT
        ports: $PORT
        env: PORT=$PORT
        cmd: java -jar target/priceservice.jar

#delete any existing Wercker secret before creating, to accommodate secret changes
inject-secret:
    box:
        id: alpine
        cmd: /bin/sh
    steps: 
        
    - kubectl:
        name: delete secret
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: delete secret ocir --namespace=$NAMESPACE; echo delete registry secret

    - kubectl:
        name: create secret
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: create secret docker-registry ocir --docker-server=$DOCKER_SERVER --docker-username=$DOCKER_USERNAME --docker-password='$DOCKER_PASSWORD' --docker-email=$DOCKER_EMAIL --namespace=$NAMESPACE; echo create registry secret

deploy-to-cluster:
    box:
        id: alpine
        cmd: /bin/sh
    steps:

    - bash-template

    - script:
        name: "Prepare K8S Config"
        code: |
          mkdir $WERCKER_OUTPUT_DIR/kubernetes
          mv kubernetes*.yml $WERCKER_OUTPUT_DIR/kubernetes
          cat $WERCKER_OUTPUT_DIR/kubernetes/kubernetes.yml

    - kubectl:
        name: deploy to kubernetes
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f $WERCKER_OUTPUT_DIR/kubernetes/ --namespace=$NAMESPACE
